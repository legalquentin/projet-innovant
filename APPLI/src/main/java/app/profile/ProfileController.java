package app;

import org.springframework.http.HttpEntity;
import org.springframework.ui.Model;
import java.util.Arrays;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@RestController
public class ProfileController {

  @Autowired
  // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  private static final String PATH = "/profil";

  //Profil input/output method
  @RequestMapping(value = PATH, method = RequestMethod.POST, produces = "application/json")
  public String manageProfile(@RequestHeader(value="session-id") String sessionId, @RequestParam(value = "payload", defaultValue = "{}") String payload) {
    try {
      JSONParser parser = new JSONParser();
      JSONObject json = (JSONObject) parser.parse(payload);
      Serializer serializer = new Serializer();

      JSONObject data = (JSONObject) json.get("data");
      Long action = (Long) json.get("action");

      if (action.intValue() == 1) {
        System.out.print("YES");
        return serializer.CreateResponseBody(200, updateProfile(data));
      }
      else {
        System.out.print("NO");
        try {
          String user = userRepository.findByEmail((String) data.get("email")).getUserJsonString();
          return "{\"status\":200, \"response\":"+user+"}";
        } catch (NullPointerException ex) {
          return "{\"status\":200, \"response\":\"{}\"}";
        }
      }
    } catch (Exception ex) {
      ex.printStackTrace();
      Serializer serializer = new Serializer();
      return serializer.CreateResponseBody(400, "Bad Request");
    }
  }

  // think about that.... What if, and i insist on the 'IF', an authenticated user
  // change his JSONpayload in the javascript request and set the email of another guy ?
  // he then can change the data of another user.
  // Now that's when things are getting tricky, if he has a valid session token, then
  // his request well be accepted no matter what, so we must first figure if his session token
  // correspond to his email ! oohohoho i'm so great sometimes :D

  private String updateProfile(JSONObject data) {
    System.out.print("test");
    String email = (String) data.get("email");
    System.out.print(email);
    // think about the token dude !
    User user = userRepository.findByEmail(email);
    user.update(data);
    userRepository.save(user);
    return "OK";
  }
}
